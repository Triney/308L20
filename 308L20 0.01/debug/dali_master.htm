<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\debug\dali_master.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\debug\dali_master.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Sat May 09 10:29:20 2015
<BR><P>
<H3>Maximum Stack Usage =        204 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
CmmssnIns_Setup &rArr; Enumerate_DALI_Ballast_3rd &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[5c]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[25]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[25]">NMI_Handler</a><BR>
 <LI><a href="#[26]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[26]">HardFault_Handler</a><BR>
 <LI><a href="#[27]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[27]">SVC_Handler</a><BR>
 <LI><a href="#[28]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[28]">PendSV_Handler</a><BR>
 <LI><a href="#[36]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[36]">ADC_IRQHandler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[38]">BOD_IRQHandler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[2b]">CAN_IRQHandler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[1e]">CmmssnIns_BLOCK_EE_Read_Enable</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[1f]">CmmssnIns_BLOCK_EE_Write_Enable</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[23]">CmmssnIns_DM320_dali_cmd</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[1c]">CmmssnIns_Read_EEPROM</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[1b]">CmmssnIns_Reboot_Device</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[20]">CmmssnIns_Request_Channel_Status</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[21]">CmmssnIns_Request_Physical_Channel_Level</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[22]">CmmssnIns_Set_Physical_Channel_Level</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[1a]">CmmssnIns_Setup</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[1d]">CmmssnIns_Write_EEPROM</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[42]">DALI_2nd_Send</a> from dali_master_2nd.o(.text) referenced 3 times from pandali_cmd.o(.text)
 <LI><a href="#[44]">DALI_3rd_Send</a> from dali_master_3rd.o(.text) referenced 3 times from pandali_cmd.o(.text)
 <LI><a href="#[40]">DALI_Send</a> from dali_master.o(.text) referenced 3 times from pandali_cmd.o(.text)
 <LI><a href="#[c]">DimIns_Clear_air_link</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[19]">DimIns_Dec_level</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[6]">DimIns_Fade_area_to_off</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[14]">DimIns_Fade_channel_level_0_1_sec</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[16]">DimIns_Fade_channel_level_1_min</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[15]">DimIns_Fade_channel_level_1_sec</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[e]">DimIns_Fade_channel_to_toggle_preset</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[11]">DimIns_Fade_to_off</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[12]">DimIns_Fade_to_on</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[18]">DimIns_Inc_level</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[9]">DimIns_Panic</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[5]">DimIns_Preset</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[17]">DimIns_Preset_offset_and_bank</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[7]">DimIns_Program_level_to_preset</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[f]">DimIns_Request_channel_level</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[10]">DimIns_Request_current_preset</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[8]">DimIns_Reset_to_preset</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[d]">DimIns_Save_current_preset</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[b]">DimIns_Set_air_link</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[13]">DimIns_Stop_fade</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[a]">DimIns_Un_panic</a> from pandali_cmd.o(.text) referenced 2 times from pandali_cmd.o(.data)
 <LI><a href="#[39]">FMC_IRQHandler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[43]">For_2nd_Decode</a> from dali_master_2nd.o(.text) referenced 3 times from pandali_cmd.o(.text)
 <LI><a href="#[45]">For_3rd_Decode</a> from dali_master_3rd.o(.text) referenced 3 times from pandali_cmd.o(.text)
 <LI><a href="#[41]">For_Decode</a> from dali_master.o(.text) referenced 3 times from pandali_cmd.o(.text)
 <LI><a href="#[26]">HardFault_Handler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[2d]">I2C_IRQHandler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[47]">Instead_of_SysTick_Handler_at_v1_02</a> from sft_tmr_apps.o(.text) referenced from sft_tmr_apps.o(.text)
 <LI><a href="#[48]">KeyScan</a> from drv_keyscan.o(.text) referenced from sft_tmr_apps.o(.text)
 <LI><a href="#[25]">NMI_Handler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[3d]">PIOINT0_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[3c]">PIOINT1_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[3b]">PIOINT2_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[3a]">PIOINT3_IRQHandler</a> from gpio.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[28]">PendSV_Handler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[46]">RS485_BeginSend</a> from sft_tmr_apps.o(.text) referenced 2 times from sft_tmr_apps.o(.text)
 <LI><a href="#[24]">Reset_Handler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[32]">SSP0_IRQHandler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[2c]">SSP1_IRQHandler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[27]">SVC_Handler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[29]">SysTick_Handler</a> from sft_tmr.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[3e]">SystemInit</a> from system_lpc11xx.o(.text) referenced from startup_lpc11xx.o(.text)
 <LI><a href="#[2e]">TIMER16_0_IRQHandler</a> from dali_master_2nd.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[2f]">TIMER16_1_IRQHandler</a> from dali_master_3rd.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[30]">TIMER32_0_IRQHandler</a> from dali_master.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[31]">TIMER32_1_IRQHandler</a> from timer32.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[33]">UART_IRQHandler</a> from uart.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[35]">USB_FIQHandler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[34]">USB_IRQHandler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[2a]">WAKEUP_IRQHandler</a> from startup_lpc11xx.o(.text) referenced 13 times from startup_lpc11xx.o(RESET)
 <LI><a href="#[37]">WDT_IRQHandler</a> from startup_lpc11xx.o(.text) referenced from startup_lpc11xx.o(RESET)
 <LI><a href="#[4b]">__main</a> from __main.o(!!!main) referenced from startup_lpc11xx.o(.text)
 <LI><a href="#[4a]">app_DelayStart</a> from sft_tmr_apps.o(.text) referenced from sft_tmr_apps.o(.text)
 <LI><a href="#[49]">module_LedBlink</a> from sft_tmr_apps.o(.text) referenced from sft_tmr_apps.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[4b]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[4c]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[4e]"></a>__scatterload_rt2</STRONG> (Thumb, 52 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[be]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[bf]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[c0]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[52]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[c1]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))

<P><STRONG><a name="[c2]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[c3]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[c4]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[c5]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[c6]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[c7]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[c8]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[c9]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[ca]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[cb]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[cc]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[cd]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[ce]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[cf]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[d0]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[d1]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[d2]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[d3]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[d4]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[57]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[d5]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[d6]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[d7]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[d8]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[d9]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[da]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[4d]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[db]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[4f]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[51]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[dc]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[53]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 172 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; DALI_Thread &rArr; EE_Block_Option &rArr; BlockWrite &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[dd]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[bd]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[56]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[de]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[58]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[24]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>I2C_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>SSP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>SSP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>USB_FIQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>WAKEUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_lpc11xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_lpc11xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[5a]"></a>Main_PLL_Setup</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, system_lpc11xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[3e]"></a>SystemInit</STRONG> (Thumb, 56 bytes, Stack size 4 bytes, system_lpc11xx.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Main_PLL_Setup
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(.text)
</UL>
<P><STRONG><a name="[76]"></a>WDTInit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>

<P><STRONG><a name="[81]"></a>WDTFeed</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
</UL>

<P><STRONG><a name="[df]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e0]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[e1]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>__user_setup_stackheap</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[75]"></a>WDT_CLK_Setup</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>

<P><STRONG><a name="[e2]"></a>DaliCirBufInit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>init_channel_data</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>

<P><STRONG><a name="[5d]"></a>Get_Channel_Param</STRONG> (Thumb, 616 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Get_Channel_Param &rArr; m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Block_Option
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>

<P><STRONG><a name="[5f]"></a>power_supply_dection_init</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = power_supply_dection_init &rArr; GPIOSetInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetInterrupt
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetDir
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>

<P><STRONG><a name="[63]"></a>SysTickInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SysTickInit &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtimer_conf
</UL>

<P><STRONG><a name="[66]"></a>BlockRead</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = BlockRead &rArr; m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Block_Option
</UL>

<P><STRONG><a name="[69]"></a>BlockWrite</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = BlockWrite &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Block_Option
</UL>

<P><STRONG><a name="[6b]"></a>AUX_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AUX_Init &rArr; GPIOSetInterrupt
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetInterrupt
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetDir
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntEnable
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>

<P><STRONG><a name="[6d]"></a>Relay_Init</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = Relay_Init &rArr; GPIOSetValue
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetValue
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>

<P><STRONG><a name="[6f]"></a>DeviceInit</STRONG> (Thumb, 236 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = DeviceInit &rArr; Get_Channel_Param &rArr; m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer32
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enable_timer32
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTInit
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetValue
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetDir
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Relay_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUX_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_supply_dection_init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Channel_Param
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_channel_data
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDT_CLK_Setup
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>Get_Offset</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = Get_Offset &rArr; m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PresetRecovery
</UL>

<P><STRONG><a name="[78]"></a>Set_Offset</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Set_Offset &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Preset_offset_and_bank
</UL>

<P><STRONG><a name="[79]"></a>PresetRecovery</STRONG> (Thumb, 486 bytes, Stack size 32 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = PresetRecovery &rArr; Get_Offset &rArr; m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Offset
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>RelayPinSetLow</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetValue
</UL>

<P><STRONG><a name="[e3]"></a>Check_REL</STRONG> (Thumb, 294 bytes, Stack size 8 bytes, main.o(.text), UNUSED)

<P><STRONG><a name="[54]"></a>main</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = main &rArr; DALI_Thread &rArr; EE_Block_Option &rArr; BlockWrite &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtimer_conf
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PresetRecovery
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[7e]"></a>IsAppendAreaAccept</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, pandali_cmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Dec_level
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_channel_level_1_min
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_channel_level_1_sec
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_channel_level_0_1_sec
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Stop_fade
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_to_on
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_to_off
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Request_current_preset
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_channel_to_toggle_preset
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Save_current_preset
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Set_air_link
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Un_panic
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Panic
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Reset_to_preset
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Program_level_to_preset
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_area_to_off
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Preset
</UL>

<P><STRONG><a name="[7d]"></a>IsAreaAccept</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, pandali_cmd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Dec_level
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Inc_level
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Preset_offset_and_bank
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_channel_level_1_min
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_channel_level_1_sec
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_channel_level_0_1_sec
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Stop_fade
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_to_on
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_to_off
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Request_current_preset
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Request_channel_level
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_channel_to_toggle_preset
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Save_current_preset
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Set_air_link
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Un_panic
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Panic
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Reset_to_preset
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Program_level_to_preset
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_area_to_off
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Preset
</UL>

<P><STRONG><a name="[5]"></a>DimIns_Preset</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = DimIns_Preset &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[6]"></a>DimIns_Fade_area_to_off</STRONG> (Thumb, 504 bytes, Stack size 32 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = DimIns_Fade_area_to_off &rArr; m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[7]"></a>DimIns_Program_level_to_preset</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = DimIns_Program_level_to_preset &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[8]"></a>DimIns_Reset_to_preset</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DimIns_Reset_to_preset &rArr; m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[9]"></a>DimIns_Panic</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DimIns_Panic &rArr; m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[a]"></a>DimIns_Un_panic</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DimIns_Un_panic &rArr; m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[b]"></a>DimIns_Set_air_link</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = DimIns_Set_air_link &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[c]"></a>DimIns_Clear_air_link</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = DimIns_Clear_air_link &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[d]"></a>DimIns_Save_current_preset</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = DimIns_Save_current_preset &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>DimIns_Fade_channel_to_toggle_preset</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = DimIns_Fade_channel_to_toggle_preset &rArr; m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[f]"></a>DimIns_Request_channel_level</STRONG> (Thumb, 300 bytes, Stack size 40 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = DimIns_Request_channel_level &rArr; UARTSend &rArr; mtimer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[10]"></a>DimIns_Request_current_preset</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = DimIns_Request_current_preset &rArr; UARTSend &rArr; mtimer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>DimIns_Fade_to_off</STRONG> (Thumb, 580 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DimIns_Fade_to_off
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[12]"></a>DimIns_Fade_to_on</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DimIns_Fade_to_on
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[13]"></a>DimIns_Stop_fade</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DimIns_Stop_fade &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>DimIns_Fade_channel_level_0_1_sec</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DimIns_Fade_channel_level_0_1_sec
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>DimIns_Fade_channel_level_1_sec</STRONG> (Thumb, 166 bytes, Stack size 20 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DimIns_Fade_channel_level_1_sec
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>DimIns_Fade_channel_level_1_min</STRONG> (Thumb, 172 bytes, Stack size 20 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DimIns_Fade_channel_level_1_min
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>DimIns_Preset_offset_and_bank</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = DimIns_Preset_offset_and_bank &rArr; Set_Offset &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Offset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[18]"></a>DimIns_Inc_level</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DimIns_Inc_level
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>DimIns_Dec_level</STRONG> (Thumb, 188 bytes, Stack size 20 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = DimIns_Dec_level
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAreaAccept
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsAppendAreaAccept
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>CmmssnIns_Setup</STRONG> (Thumb, 332 bytes, Stack size 24 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = CmmssnIns_Setup &rArr; Enumerate_DALI_Ballast_3rd &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDTFeed
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Ballast_Param
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_3rd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_2nd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Send
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Send
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Send
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetValue
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Channel_Param
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>CmmssnIns_Reboot_Device</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, pandali_cmd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>CmmssnIns_Read_EEPROM</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = CmmssnIns_Read_EEPROM &rArr; m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[1d]"></a>CmmssnIns_Write_EEPROM</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = CmmssnIns_Write_EEPROM &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[1e]"></a>CmmssnIns_BLOCK_EE_Read_Enable</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CmmssnIns_BLOCK_EE_Read_Enable &rArr; UARTSend &rArr; mtimer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[1f]"></a>CmmssnIns_BLOCK_EE_Write_Enable</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = CmmssnIns_BLOCK_EE_Write_Enable &rArr; UARTSend &rArr; mtimer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[20]"></a>CmmssnIns_Request_Channel_Status</STRONG> (Thumb, 432 bytes, Stack size 32 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = CmmssnIns_Request_Channel_Status &rArr; UARTSend &rArr; mtimer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[21]"></a>CmmssnIns_Request_Physical_Channel_Level</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, pandali_cmd.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[22]"></a>CmmssnIns_Set_Physical_Channel_Level</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CmmssnIns_Set_Physical_Channel_Level
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[23]"></a>CmmssnIns_DM320_dali_cmd</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CmmssnIns_DM320_dali_cmd &rArr; WriteBuffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBuffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pandali_cmd.o(.data)
</UL>
<P><STRONG><a name="[a6]"></a>ProcessCMD</STRONG> (Thumb, 158 bytes, Stack size 72 bytes, pandali_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ProcessCMD
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>

<P><STRONG><a name="[88]"></a>mtimer_create</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, sft_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = mtimer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftDelayStart
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sft_Init_all_timers
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RS485_BeginSend
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
</UL>

<P><STRONG><a name="[8a]"></a>mtimer_start</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, sft_tmr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftDelayStart
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DelayStart
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sft_Init_all_timers
</UL>

<P><STRONG><a name="[8c]"></a>mtimer_stop</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sft_tmr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SoftDelayStart
</UL>

<P><STRONG><a name="[e4]"></a>mtimer_detach</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sft_tmr.o(.text), UNUSED)

<P><STRONG><a name="[e5]"></a>mtimer_get_run_tick</STRONG> (Thumb, 38 bytes, Stack size 12 bytes, sft_tmr.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>sft_timer_thread</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, sft_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sft_timer_thread
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>

<P><STRONG><a name="[29]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sft_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtimer_isr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>mtimer_conf</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sft_tmr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mtimer_conf &rArr; SysTickInit &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickInit
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>Instead_of_SysTick_Handler_at_v1_02</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, sft_tmr_apps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sft_tmr_apps.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>module_LedBlink</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sft_tmr_apps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sft_tmr_apps.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>RS485_BeginSend</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, sft_tmr_apps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RS485_BeginSend &rArr; mtimer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtimer_create
</UL>
<BR>[Address Reference Count : 2]<UL><LI> sft_tmr_apps.o(.text)
<LI> uart.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>Sft_Init_all_timers</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, sft_tmr_apps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Sft_Init_all_timers &rArr; mtimer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtimer_start
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtimer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_DelayStart
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>

<P><STRONG><a name="[4a]"></a>app_DelayStart</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sft_tmr_apps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = app_DelayStart &rArr; Sft_Init_all_timers &rArr; mtimer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sft_Init_all_timers
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtimer_start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sft_tmr_apps.o(.text)
</UL>
<P><STRONG><a name="[8b]"></a>SoftDelayStart</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, sft_tmr_apps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtimer_stop
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtimer_start
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtimer_create
</UL>

<P><STRONG><a name="[8d]"></a>delay32Ms</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, timer32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[31]"></a>TIMER32_1_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, timer32.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>enable_timer32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>

<P><STRONG><a name="[90]"></a>disable_timer32</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, timer32.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer32PWM
</UL>

<P><STRONG><a name="[e6]"></a>reset_timer32</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, timer32.o(.text), UNUSED)

<P><STRONG><a name="[73]"></a>init_timer32</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, timer32.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_timer32
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>

<P><STRONG><a name="[8f]"></a>init_timer32PWM</STRONG> (Thumb, 404 bytes, Stack size 12 bytes, timer32.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disable_timer32
</UL>

<P><STRONG><a name="[e7]"></a>setMatch_timer32PWM</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, timer32.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>PIOINT0_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[92]"></a>GPIOIntClear</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIOINT1_IRQHandler
</UL>

<P><STRONG><a name="[91]"></a>GPIOIntStatus</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIOIntStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIOINT1_IRQHandler
</UL>

<P><STRONG><a name="[3c]"></a>PIOINT1_IRQHandler</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = PIOINT1_IRQHandler &rArr; GPIOIntStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntStatus
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOIntClear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>PIOINT2_IRQHandler</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>PIOINT3_IRQHandler</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, gpio.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>GPIOInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUX_Init
</UL>

<P><STRONG><a name="[61]"></a>GPIOSetInterrupt</STRONG> (Thumb, 446 bytes, Stack size 16 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIOSetInterrupt
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUX_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_supply_dection_init
</UL>

<P><STRONG><a name="[62]"></a>GPIOIntEnable</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUX_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_supply_dection_init
</UL>

<P><STRONG><a name="[e8]"></a>GPIOIntDisable</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, gpio.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>GPIOSetValue</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOSetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RelayPinSetLow
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Relay_Init
</UL>

<P><STRONG><a name="[60]"></a>GPIOSetDir</STRONG> (Thumb, 78 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOSetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Relay_Init
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUX_Init
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_supply_dection_init
</UL>

<P><STRONG><a name="[bb]"></a>GPIOStatusValue</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPIOStatusValue
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValue
</UL>

<P><STRONG><a name="[33]"></a>UART_IRQHandler</STRONG> (Thumb, 312 bytes, Stack size 20 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = UART_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>UARTInit</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UARTInit
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>

<P><STRONG><a name="[68]"></a>UARTSend</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = UARTSend &rArr; mtimer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mtimer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Block_Option
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Request_Channel_Status
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_BLOCK_EE_Write_Enable
<LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_BLOCK_EE_Read_Enable
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Write_EEPROM
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Read_EEPROM
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Request_current_preset
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Request_channel_level
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockWrite
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockRead
</UL>

<P><STRONG><a name="[e9]"></a>uartSendByte</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[80]"></a>DelayMS</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dali_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress_2nd
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress_3rd
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Ballast_Param
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_3rd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_2nd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
</UL>

<P><STRONG><a name="[95]"></a>DALI_ConvertForwardFrame</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, dali_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Send
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Send
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Send
</UL>

<P><STRONG><a name="[96]"></a>DALI_CheckWaitForAnswer</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, dali_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Send
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Send
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Send
</UL>

<P><STRONG><a name="[97]"></a>DALI_CheckRepeatCmd</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, dali_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Send
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Send
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Send
</UL>

<P><STRONG><a name="[41]"></a>For_Decode</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = For_Decode &rArr; DALI_CheckLogicalError
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_CheckTimingError
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_CheckLogicalError
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAndReply
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>
<BR>[Address Reference Count : 2]<UL><LI> pandali_cmd.o(.text)
<LI> dali_master.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>DALI_Send</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DALI_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_CheckRepeatCmd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_CheckWaitForAnswer
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_ConvertForwardFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAndReply
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>
<BR>[Address Reference Count : 2]<UL><LI> pandali_cmd.o(.text)
<LI> dali_master.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>TIMER32_0_IRQHandler</STRONG> (Thumb, 566 bytes, Stack size 8 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER32_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>WriteBuffer</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteBuffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_DALI_Send
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_DM320_dali_cmd
</UL>

<P><STRONG><a name="[98]"></a>ReadBuffer</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ReadBuffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>

<P><STRONG><a name="[a4]"></a>ClearBuffer</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dali_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>

<P><STRONG><a name="[9e]"></a>AddressingLow8bit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dali_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_3rd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_2nd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast
</UL>

<P><STRONG><a name="[9f]"></a>AddressingMiddle8bit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, dali_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_3rd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_2nd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast
</UL>

<P><STRONG><a name="[a0]"></a>AddressingHigh8bit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, dali_master.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_3rd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_2nd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast
</UL>

<P><STRONG><a name="[67]"></a>CheckSum</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Block_Option
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Request_Channel_Status
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Read_EEPROM
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Request_current_preset
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Request_channel_level
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockWrite
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockRead
</UL>

<P><STRONG><a name="[9b]"></a>EE_Block_Option</STRONG> (Thumb, 276 bytes, Stack size 8 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = EE_Block_Option &rArr; BlockWrite &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockWrite
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockRead
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Channel_Param
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>

<P><STRONG><a name="[9c]"></a>Check_Channel</STRONG> (Thumb, 532 bytes, Stack size 24 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Check_Channel &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>

<P><STRONG><a name="[9d]"></a>Check_DALI_Send</STRONG> (Thumb, 374 bytes, Stack size 8 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Check_DALI_Send &rArr; WriteBuffer &rArr; __aeabi_idivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>

<P><STRONG><a name="[82]"></a>Enumerate_DALI_Ballast</STRONG> (Thumb, 976 bytes, Stack size 40 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Enumerate_DALI_Ballast &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingHigh8bit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingMiddle8bit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingLow8bit
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAndReply
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Send
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
</UL>

<P><STRONG><a name="[83]"></a>Set_Ballast_Param</STRONG> (Thumb, 488 bytes, Stack size 40 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Set_Ballast_Param
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
</UL>

<P><STRONG><a name="[7c]"></a>DALI_Thread</STRONG> (Thumb, 1428 bytes, Stack size 8 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = DALI_Thread &rArr; EE_Block_Option &rArr; BlockWrite &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_DALI_Send
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Channel
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Block_Option
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearBuffer
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBuffer
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sft_Init_all_timers
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sft_timer_thread
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_Decode
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_3rd_Decode
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_2nd_Decode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Send
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Send
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Send
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessCMD
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTSend
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a7]"></a>DALI_3rd_Decode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, dali_master_3rd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DALI_3rd_Decode &rArr; DALI_3rd_CheckLogicalError
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_CheckTimingError
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_CheckLogicalError
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_3rd_Decode
</UL>

<P><STRONG><a name="[44]"></a>DALI_3rd_Send</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, dali_master_3rd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DALI_3rd_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_CheckRepeatCmd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_CheckWaitForAnswer
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_ConvertForwardFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress_3rd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAndReply_3rd
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_3rd
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>
<BR>[Address Reference Count : 2]<UL><LI> pandali_cmd.o(.text)
<LI> dali_master.o(.text)
</UL>
<P><STRONG><a name="[a3]"></a>DALI_3rd_Init</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, dali_master_3rd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DALI_3rd_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>

<P><STRONG><a name="[45]"></a>For_3rd_Decode</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dali_master_3rd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = For_3rd_Decode &rArr; DALI_3rd_Decode &rArr; DALI_3rd_CheckLogicalError
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress_3rd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAndReply_3rd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>
<BR>[Address Reference Count : 2]<UL><LI> pandali_cmd.o(.text)
<LI> dali_master.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>TIMER16_1_IRQHandler</STRONG> (Thumb, 594 bytes, Stack size 8 bytes, dali_master_3rd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER16_1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>Enumerate_DALI_Ballast_3rd</STRONG> (Thumb, 970 bytes, Stack size 40 bytes, dali_master_3rd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Enumerate_DALI_Ballast_3rd &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress_3rd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAndReply_3rd
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingHigh8bit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingMiddle8bit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingLow8bit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Send
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
</UL>

<P><STRONG><a name="[ac]"></a>DALI_2nd_Decode</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, dali_master_2nd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DALI_2nd_Decode &rArr; DALI_2nd_CheckLogicalError
</UL>
<BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_CheckTimingError
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_CheckLogicalError
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_2nd_Decode
</UL>

<P><STRONG><a name="[42]"></a>DALI_2nd_Send</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, dali_master_2nd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DALI_2nd_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_CheckRepeatCmd
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_CheckWaitForAnswer
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_ConvertForwardFrame
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress_2nd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAndReply_2nd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_2nd
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>
<BR>[Address Reference Count : 2]<UL><LI> pandali_cmd.o(.text)
<LI> dali_master.o(.text)
</UL>
<P><STRONG><a name="[a2]"></a>DALI_2nd_Init</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, dali_master_2nd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DALI_2nd_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>

<P><STRONG><a name="[43]"></a>For_2nd_Decode</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dali_master_2nd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = For_2nd_Decode &rArr; DALI_2nd_Decode &rArr; DALI_2nd_CheckLogicalError
</UL>
<BR>[Calls]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Decode
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress_2nd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAndReply_2nd
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>
<BR>[Address Reference Count : 2]<UL><LI> pandali_cmd.o(.text)
<LI> dali_master.o(.text)
</UL>
<P><STRONG><a name="[2e]"></a>TIMER16_0_IRQHandler</STRONG> (Thumb, 594 bytes, Stack size 8 bytes, dali_master_2nd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIMER16_0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_lpc11xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>Enumerate_DALI_Ballast_2nd</STRONG> (Thumb, 950 bytes, Stack size 40 bytes, dali_master_2nd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Enumerate_DALI_Ballast_2nd &rArr; m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProgramShortAddress_2nd
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareAndReply_2nd
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingHigh8bit
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingMiddle8bit
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddressingLow8bit
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Send
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
</UL>

<P><STRONG><a name="[71]"></a>i2c_lpc_init</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, i2c1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
</UL>

<P><STRONG><a name="[6a]"></a>m24xx_write</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, i2c1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = m24xx_write &rArr; i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_m24xx_wr
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_page_size
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_3rd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_2nd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast
<LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Write_EEPROM
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Setup
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Save_current_preset
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Clear_air_link
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Set_air_link
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Program_level_to_preset
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Preset
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Offset
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockWrite
</UL>

<P><STRONG><a name="[5e]"></a>m24xx_read</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, i2c1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = m24xx_read &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_set_addr
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_page_size
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_rx_to_buf
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_ctrl
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_stop
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_wr_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EE_Block_Option
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_3rd
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_2nd
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CmmssnIns_Read_EEPROM
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_channel_to_toggle_preset
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Save_current_preset
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Set_air_link
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Un_panic
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Panic
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Reset_to_preset
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Program_level_to_preset
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_area_to_off
<LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Preset
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PresetRecovery
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Offset
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockWrite
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlockRead
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Channel_Param
</UL>

<P><STRONG><a name="[ba]"></a>KeyValue</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, drv_keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = KeyValue &rArr; GPIOStatusValue
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOStatusValue
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOSetDir
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyScan
</UL>

<P><STRONG><a name="[ea]"></a>Panel_KeyInit</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, drv_keyscan.o(.text), UNUSED)

<P><STRONG><a name="[48]"></a>KeyScan</STRONG> (Thumb, 300 bytes, Stack size 16 bytes, drv_keyscan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = KeyScan &rArr; KeyValue &rArr; GPIOStatusValue
</UL>
<BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sft_tmr_apps.o(.text)
</UL>
<P><STRONG><a name="[eb]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>__aeabi_uidivmod</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Init
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Init
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay32Ms
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_to_on
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Fade_to_off
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UARTInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickInit
</UL>

<P><STRONG><a name="[ec]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>__aeabi_idivmod</STRONG> (Thumb, 326 bytes, Stack size 8 bytes, aeabi_sdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Check_Channel
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadBuffer
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteBuffer
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DimIns_Stop_fade
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
</UL>

<P><STRONG><a name="[55]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_call_atexit_fns (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[ed]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[ee]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[59]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[ef]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[f0]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[f1]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[f2]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[f3]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, i2c1.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyValue
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_set_addr
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_page_size
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[65]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTickInit
</UL>

<P><STRONG><a name="[87]"></a>mtimer_isr</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, sft_tmr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[8e]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, timer32.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_timer32
</UL>

<P><STRONG><a name="[94]"></a>DALI_CheckLogicalError</STRONG> (Thumb, 172 bytes, Stack size 24 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DALI_CheckLogicalError
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_Decode
</UL>

<P><STRONG><a name="[99]"></a>CompareAndReply</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CompareAndReply &rArr; For_Decode &rArr; DALI_CheckLogicalError
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_Decode
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast
</UL>

<P><STRONG><a name="[9a]"></a>ProgramShortAddress</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ProgramShortAddress &rArr; For_Decode &rArr; DALI_CheckLogicalError
</UL>
<BR>[Calls]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_Decode
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast
</UL>

<P><STRONG><a name="[93]"></a>DALI_CheckTimingError</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DALI_CheckTimingError
</UL>
<BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_Decode
</UL>

<P><STRONG><a name="[a1]"></a>DALI_Init</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, dali_master.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DALI_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_Thread
</UL>

<P><STRONG><a name="[a9]"></a>DALI_3rd_CheckLogicalError</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, dali_master_3rd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DALI_3rd_CheckLogicalError
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Decode
</UL>

<P><STRONG><a name="[aa]"></a>CompareAndReply_3rd</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dali_master_3rd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CompareAndReply_3rd &rArr; For_3rd_Decode &rArr; DALI_3rd_Decode &rArr; DALI_3rd_CheckLogicalError
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_3rd_Decode
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_3rd
</UL>

<P><STRONG><a name="[ab]"></a>ProgramShortAddress_3rd</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, dali_master_3rd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ProgramShortAddress_3rd &rArr; For_3rd_Decode &rArr; DALI_3rd_Decode &rArr; DALI_3rd_CheckLogicalError
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_3rd_Decode
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_3rd
</UL>

<P><STRONG><a name="[a8]"></a>DALI_3rd_CheckTimingError</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dali_master_3rd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DALI_3rd_CheckTimingError
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_3rd_Decode
</UL>

<P><STRONG><a name="[ae]"></a>DALI_2nd_CheckLogicalError</STRONG> (Thumb, 178 bytes, Stack size 24 bytes, dali_master_2nd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = DALI_2nd_CheckLogicalError
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Decode
</UL>

<P><STRONG><a name="[af]"></a>CompareAndReply_2nd</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, dali_master_2nd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CompareAndReply_2nd &rArr; For_2nd_Decode &rArr; DALI_2nd_Decode &rArr; DALI_2nd_CheckLogicalError
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_2nd_Decode
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_2nd
</UL>

<P><STRONG><a name="[b0]"></a>ProgramShortAddress_2nd</STRONG> (Thumb, 170 bytes, Stack size 8 bytes, dali_master_2nd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ProgramShortAddress_2nd &rArr; For_2nd_Decode &rArr; DALI_2nd_Decode &rArr; DALI_2nd_CheckLogicalError
</UL>
<BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;For_2nd_Decode
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMS
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Enumerate_DALI_Ballast_2nd
</UL>

<P><STRONG><a name="[ad]"></a>DALI_2nd_CheckTimingError</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, dali_master_2nd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DALI_2nd_CheckTimingError
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DALI_2nd_Decode
</UL>

<P><STRONG><a name="[b7]"></a>i2c_lpc_wr_byte</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, i2c1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_m24xx_wr
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>

<P><STRONG><a name="[b2]"></a>i2c_lpc_stop</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, i2c1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_m24xx_wr
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_ctrl
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>

<P><STRONG><a name="[b1]"></a>i2c_lpc_ctrl</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, i2c1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = i2c_lpc_ctrl
</UL>
<BR>[Calls]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_m24xx_wr
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>

<P><STRONG><a name="[b9]"></a>i2c_lpc_rx_to_buf</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, i2c1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_lpc_rx_to_buf
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>

<P><STRONG><a name="[b8]"></a>i2c_lpc_ask_polling_op</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, i2c1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = i2c_lpc_ask_polling_op
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_m24xx_wr
</UL>

<P><STRONG><a name="[b3]"></a>m24xx_page_size</STRONG> (Thumb, 166 bytes, Stack size 16 bytes, i2c1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = m24xx_page_size &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>

<P><STRONG><a name="[b5]"></a>m24xx_set_addr</STRONG> (Thumb, 254 bytes, Stack size 28 bytes, i2c1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_m24xx_wr
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_read
</UL>

<P><STRONG><a name="[b6]"></a>i2c_lpc_m24xx_wr</STRONG> (Thumb, 164 bytes, Stack size 56 bytes, i2c1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = i2c_lpc_m24xx_wr &rArr; m24xx_set_addr &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_set_addr
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_ask_polling_op
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_ctrl
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_stop
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;i2c_lpc_wr_byte
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;m24xx_write
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[bc]"></a>_call_atexit_fns</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>
<HR></body></html>
